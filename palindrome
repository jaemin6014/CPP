#include <iostream>
#include <vector>

using namespace std;

bool is_palindrome_v1(vector<char>& array);
bool is_palindrome_v2(vector<char>& array);

int main()
{
	vector<char>array = { 'a', 'b', 'd', 'a' };
	cout << is_palindrome_v1(array) << endl;
	cout << is_palindrome_v2(array) << endl;

	return 0;
}

bool is_palindrome_v1(vector<char>& array)
{
	bool res = true;

	for (int i = 0; i < array.size() / 2; i++)
	{
		if (array[i] != array[array.size() - i - 1])
		{
			res = false;
			break;
		}
	}

	return res;
}

bool is_palindrome_v2(std::vector<char>& array)
{
	bool res = true;

	if (array.size() <= 1)
	{
		return res;
	}

	if (array[0] != array[array.size() - 1])
	{
		res = false;
	}
	else
	{
		array.erase(array.begin());
		array.erase(array.begin() + array.size() - 1);
		res = is_palindrome_v2(array);
	}
	
	return res;
}
